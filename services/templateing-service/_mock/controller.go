// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hingew/hsfl-master-ai-cloud-engineering/templateing-service/templates/controller (interfaces: Controller)

// Package mock_controller is a generated GoMock package.
package mock_

import (
        http "net/http"
        reflect "reflect"

        gomock "github.com/golang/mock/gomock"
)

// MockController is a mock of Controller interface.
type MockController struct {
        ctrl     *gomock.Controller
        recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
        mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
        mock := &MockController{ctrl: ctrl}
        mock.recorder = &MockControllerMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
        return m.recorder
}

// CreateTemplate mocks base method.
func (m *MockController) CreateTemplate(arg0 http.ResponseWriter, arg1 *http.Request) {
        m.ctrl.T.Helper()
        m.ctrl.Call(m, "CreateTemplate", arg0, arg1)
}

// CreateTemplate indicates an expected call of CreateTemplate.
func (mr *MockControllerMockRecorder) CreateTemplate(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTemplate", reflect.TypeOf((*MockController)(nil).CreateTemplate), arg0, arg1)
}

// DeleteTemplate mocks base method.
func (m *MockController) DeleteTemplate(arg0 http.ResponseWriter, arg1 *http.Request) {
        m.ctrl.T.Helper()
        m.ctrl.Call(m, "DeleteTemplate", arg0, arg1)
}

// DeleteTemplate indicates an expected call of DeleteTemplate.
func (mr *MockControllerMockRecorder) DeleteTemplate(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTemplate", reflect.TypeOf((*MockController)(nil).DeleteTemplate), arg0, arg1)
}

// GetAllTemplates mocks base method.
func (m *MockController) GetAllTemplates(arg0 http.ResponseWriter, arg1 *http.Request) {
        m.ctrl.T.Helper()
        m.ctrl.Call(m, "GetAllTemplates", arg0, arg1)
}

// GetAllTemplates indicates an expected call of GetAllTemplates.
func (mr *MockControllerMockRecorder) GetAllTemplates(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTemplates", reflect.TypeOf((*MockController)(nil).GetAllTemplates), arg0, arg1)
}

// GetTemplate mocks base method.
func (m *MockController) GetTemplate(arg0 http.ResponseWriter, arg1 *http.Request) {
        m.ctrl.T.Helper()
        m.ctrl.Call(m, "GetTemplate", arg0, arg1)
}

// GetTemplate indicates an expected call of GetTemplate.
func (mr *MockControllerMockRecorder) GetTemplate(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemplate", reflect.TypeOf((*MockController)(nil).GetTemplate), arg0, arg1)
}

// UpdateTemplate mocks base method.
func (m *MockController) UpdateTemplate(arg0 http.ResponseWriter, arg1 *http.Request) {
        m.ctrl.T.Helper()
        m.ctrl.Call(m, "UpdateTemplate", arg0, arg1)
}

// UpdateTemplate indicates an expected call of UpdateTemplate.
func (mr *MockControllerMockRecorder) UpdateTemplate(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTemplate", reflect.TypeOf((*MockController)(nil).UpdateTemplate), arg0, arg1)
}