version: '3.9'

services:
  reverse_proxy:
    build:
      context: ./ 
      dockerfile: ./services/api-gateway/Dockerfile
    ports:
      - 3000:3000
    environment:
      - WEB_ENDPOINT=web:3000
      - TEMPLATE_ENDPOINT=templates:3000
      - CREATION_ENDPOINT=creation:3000
      - USER_ENDPOINT=user:3000
    depends_on:
      - web
      - templates
      - creation
      - user
    links:
      - web
      - templates
      - creation
      - user
  
  web:
    build:
      context: ./ 
      dockerfile: ./services/web-service/Dockerfile
    ports:
      - 3001:3000

  templates:
    build:
      context: ./
      dockerfile: ./services/templateing-service/Dockerfile
    ports:
      - 3002:3000
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: postgres
  
  creation:
    build: 
      context: ./
      dockerfile: ./services/creation-service/Dockerfile
    ports:
      - 3003:3000
  
  user:
    build: 
      context: ./
      dockerfile: ./services/user-service/Dockerfile
    ports:
      - 3004:3000
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 5s
      timeout: 5s
      retries: 5
